{"version":3,"file":"sample.js","sourceRoot":"","sources":["sample.ts"],"names":[],"mappings":";;;;;;AAGA,IAAO,KAAK,WAAW,OAAO,CAAC,CAAC;AAEhC,sBAAgE,iBAAiB,CAAC,CAAA;AAClF,qBAAqB,QAAQ,CAAC,CAAA;AAW9B;IAAoC,kCAAqB;IACrD,wBAAY,IAA0B;QAClC,kBAAM,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,WAAW,GAAG,IAAI,mBAAW,CAAgB,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,mBAAW,CAAgB,IAAI,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAMM,kCAAS,GAAhB;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAEM,iCAAQ,GAAf;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACL,qBAAC;AAAD,CAAC,AAnBD,CAAoC,kBAAU,GAmB7C;AAnBY,sBAAc,iBAmB1B,CAAA;AAGD;IAA+B,6BAA2C;IACtE,mBAAY,MAAe;QACvB,iBAAO,CAAC;QAER,IAAM,KAAK,GAAc;YACrB,MAAM,EAAE,MAAM;SACjB,CAAC;QAEF,IAAM,UAAU,GAAmB,IAAI,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QAE3E,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAErC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACpD,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;IAED,2BAAO,GAAP,UAAQ,KAAgB,EAAE,UAA0B;QAChD,MAAM,CAAC;YACH,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,UAAU,EAAE,UAAU;SACzB,CAAC;IACN,CAAC;IAEM,8BAAU,GAAjB,UAAkB,MAAU,EAAE,OAAkB,EAAE,MAAiC;QAC/E,MAAM,CAAC;YACH,MAAM,EAAE,KAAK;SAChB,CAAC,CAAC;IACP,CAAC;IAEM,+BAAW,GAAlB,UAAmB,MAAU,EAAE,OAAkB,EAAE,MAAiC;QAChF,MAAM,CAAC;YACH,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;IACP,CAAC;IACL,gBAAC;AAAD,CAAC,AAlCD,CAA+B,aAAK,GAkCnC;AAlCY,iBAAS,YAkCrB,CAAA;AAGD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAErB,YAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE,UAAC,IAAe;IACxE,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,WAAI,EAAE,IAAI,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC","sourcesContent":["/// <reference path=\"../../typings/react/react.d.ts\" />\r\n/// <reference path=\"../../typings/react/react-dom.d.ts\" />\r\nimport ReactDOM = require(\"react-dom\");\r\nimport React = require(\"react\");\r\n\r\nimport { ActionEvent, bind, Dispatcher, StatePipe, Store } from \"../../src/tarai\";\nimport { Spin } from \"./spin\";\r\n\r\nexport interface SpinState {\r\n    isSpin?: boolean;\r\n}\r\n\r\nexport interface SpinProps extends SpinState {\n    dispatcher?: SpinDispatcher;\n}\r\n\r\n\r\nexport class SpinDispatcher extends Dispatcher<SpinState> {\r\n    constructor(pipe: StatePipe<SpinState>) {\r\n        super(pipe);\r\n\r\n        this.onStartSpin = new ActionEvent<SpinState, {}>(this.pipe);\r\n        this.onStopSpin = new ActionEvent<SpinState, {}>(this.pipe);\r\n    }\r\n\r\n    public onStartSpin: ActionEvent<SpinState, {}>;\r\n    public onStopSpin: ActionEvent<SpinState, {}>;\r\n\r\n\r\n    public startSpin() {\r\n        this.onStartSpin.fire({});\r\n    }\r\n\r\n    public stopSpin() {\r\n        this.onStopSpin.fire({});\r\n    }\r\n}\r\n\r\n\r\nexport class SpinStore extends Store<SpinState, SpinProps, SpinDispatcher> {\r\n    constructor(isSpin: boolean) {\r\n        super();\r\n\r\n        const state: SpinState = {\r\n            isSpin: isSpin,\r\n        };\r\n\r\n        const dispatcher: SpinDispatcher = new SpinDispatcher(this.getStatePipe());\r\n\r\n        this.setCondition(state, dispatcher);\r\n\r\n        dispatcher.onStartSpin.bind(this, this.onStartSpin);\r\n        dispatcher.onStopSpin.bind(this, this.onStopSpin);\r\n    }\r\n\r\n    toProps(state: SpinState, dispatcher: SpinDispatcher): SpinProps {\r\n        return {\r\n            isSpin: state.isSpin,\r\n            dispatcher: dispatcher,\r\n        };\r\n    }\r\n\r\n    public onStopSpin(action: {}, current: SpinState, update: (next: SpinState) => void) {\r\n        update({\r\n            isSpin: false,\r\n        });\r\n    }\r\n\r\n    public onStartSpin(action: {}, current: SpinState, update: (next: SpinState) => void) {\r\n        update({\r\n            isSpin: true,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconsole.log(\"start\");\r\n\r\nbind(document.getElementById(\"target\"), new SpinStore(true), (next: SpinProps) => {\r\n     return React.createElement(Spin, next);\r\n});\r\n"]}